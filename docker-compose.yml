services:
  postgresql:
    container_name: postgresql
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - jinx-v2-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 1G

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASS}
    volumes:
      - ./volumes/redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - jinx-v2-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $REDIS_PASS ping"]
    deploy:
      resources:
        limits:
          memory: 1G

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - ./volumes/rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - jinx-v2-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
    deploy:
      resources:
        limits:
          memory: 1G

  server:
    container_name: jinx_v2_server
    build: .
    image: jinx_v2_image
    command: gunicorn project.wsgi:application -c gunicorn.py
    env_file:
      - .env
    volumes:
      - ./volumes/media:/volumes/media
      - ./volumes/logs:/volumes/logs
    ports:
      - "8000:8000"
    networks:
      - jinx-v2-network
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c 'cat < /dev/null > /dev/tcp/localhost/8000'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 1G

  websocket:
    container_name: jinx_v2_websocket
    build: .
    image: jinx_v2_image
    command: daphne -b 0.0.0.0 -p 8800 project.asgi:application
    env_file:
      - .env
    volumes:
      - ./volumes/media:/volumes/media
      - ./volumes/logs:/volumes/logs
    ports:
      - "8800:8800"
    networks:
      - jinx-v2-network
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G

  celery:
    container_name: jinx_v2_celery
    build: .
    image: jinx_v2_image
    command: celery -A project worker -l INFO
    env_file:
      - .env
    volumes:
      - ./volumes/media:/volumes/media
      - ./volumes/logs:/volumes/logs
    networks:
      - jinx-v2-network
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  jinx-v2-network:
